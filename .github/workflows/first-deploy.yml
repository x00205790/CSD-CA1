name: first-deploy
on:
  workflow_dispatch:

jobs:
  create-storage-acct:
    runs-on: ubuntu-latest
    environment: terraform
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZ_CREDENTIALS }}

    - name: Create storage account
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az storage account create -n ${{ secrets.STORAGE_ACCOUNT }} -g ${{ secrets.RG }} -l northeurope --sku Standard_LRS

  terraform:
    name: Plan / Apply
    runs-on: ubuntu-latest
    environment: terraform
    defaults:
      run:
        working-directory: terraform-deploy
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_RESOURCE_GROUP: ${{ secrets.RG }}
        TF_VAR_STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
        TF_VAR_CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        TF_VAR_tenant: ${{ secrets.ARM_TENANT_ID }}
        TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: terraform init
      continue-on-error: false

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: false

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: false