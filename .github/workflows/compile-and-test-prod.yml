name: compile-test-deploy-prod

env:
  AZ_WEBAPP_NAME: cd-bpcalculator
  AZ_WEBAPP_PACKAGE_PATH: 'bp/publish'

on:
  workflow_dispatch:

jobs:
  docker_build_push:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Build Application
      run: dotnet build bp/BPCalculator --configuration Release

    - name: Publish
      run: dotnet publish bp/BPCalculator/BPCalculator.csproj -c Release -o '${{ env.AZ_WEBAPP_PACKAGE_PATH }}/myapp'

###### Be aware that the following plugin requires the use of the admin user and does not support service principals
    - name: Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR }}
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_SECRET }}
    - run: |
          docker build . -t ${{ secrets.ACR }}/bpcalculator-prod:${{ github.sha }}
          docker push ${{ secrets.ACR }}/bpcalculator-prod:${{ github.sha }}

  terraform:
    name: Plan / Apply
    runs-on: ubuntu-latest
    environment: production
    needs: docker_build_push
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_rg: ${{ secrets.RG }}
      TF_VAR_STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
      TF_VAR_CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      TF_VAR_tenant: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_acr_user: ${{ secrets.ACR_USER }}
      TF_VAR_acr_pass: ${{ secrets.ACR_SECRET }}
      TF_VAR_acr_image: ${{ secrets.ACR }}/bpcalculator-prod:${{ github.sha }}
    defaults:
      run:
        working-directory: tf-prod
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: false

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: false

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: false
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
      continue-on-error: false

  zap-vulnerability-test:
    name: zap security test
    runs-on: ubuntu-latest
    needs: terraform
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: ZAP security scan
      uses: zaproxy/action-baseline@v0.10.0
      #### Use continue on error because container exits with code 2 if issues are found
      continue-on-error: true
      with:
        target: 'http://cdillon-bpcalc.northeurope.azurecontainer.io'

  puppeteer:
    runs-on: ubuntu-latest
    needs: terraform
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/checkout@v4

      - name: Puppeteer test
        uses: tj-actions/puppeteer@v5
        id: puppeteer
        with:
          files: |
            puppeteer/prod-test.js

  k6s-load-test:
    name: k6 Load Test
    runs-on: ubuntu-latest
    needs: terraform
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Run local k6 test
      uses: grafana/k6-action@v0.3.1
      with:
        filename: k6s/test-prod.js

